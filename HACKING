To build, all you need is a Java 6 (or greater) compiler and Ant,
properly configured to find the Java compiler.

If you want to use the Checkstyle target "check", you'll need to drop
a recent version of the Checkstyle -all.jar in your Ant's lib/
directory.

If you want to use hotswapping -- replacing code while the engine is
still running -- you'll need to put hotswap
(http://code.google.com/p/hotswap/) in your Ant lib/ directory. While
the engine is running with the "run" target, you can run the "hotswap"
target to update the running code.

If you want to use the "format" target you'll need AStyle installed
somewhere on your PATH.

If the source is checked into Git, it will try to use "git describe"
to get version numbers.

You'll need Launch4j to create the Windows executable and NSIS to
create the Windows installer.

I like the code to pass all Checkstyle checks and be properly
formatted by the "format" target before it gets checked in. A trick
you can use for the latter if you're nervous about formatting
uncommitted code: first commit your code, format, then commit --amend.

  git commit -am "Added blah blah."
  ant format
  git diff   # check it
  git commit -a --amend
